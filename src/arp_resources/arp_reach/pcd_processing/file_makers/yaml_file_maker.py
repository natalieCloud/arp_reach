#! /usr/bin/env

# Author: Natalie Chmura
# Maintainer: Natalie Chmura email:ntchmura@gmail.com

import yaml

##
# @brief A python file that outputs a .yaml file with an designated input file 
# (And collision meshes?) and produces a yaml file with those specifications!
##

##
# @mainpage YAML file generator
#
#
# @section description_main Description
# A python file that takes a processed pcd file generated by the pcd_processor, (EXTENSION:
# as well as any collision meshes in the form of a ply file) And adds them into a yaml file,
# tagged appropriatly.
#
# INPUT:
# pcd_filename: 'package://arp_reach/config/poses.pcd'
# ply_filename: 'package://arp_reach/config/collision_mesh.ply'
#
# OUTPUT:
#
# optimization:
#   radius: 0.2
#   max_steps: 10
#   step_improvment_threshold: 0.01
#
# ik_solver:
#   name: MoveItIKSolver
#   distance_threshold: 0.0
#   planning_group: manipulator
#   collision_mesh_filename: package://arp_reach/config/collision_mesh.ply
#   touch_links: []
#
# evaluator:
#   name: MultiplicativeEvaluator
#   plugins:
#     - name: ManipulabilityMoveIt
#       planning_group: manipulator
#     - name: DistancePenaltyMoveIt
#       planning_group: manipulator
#       distance_threshold: 0.025
#       exponent: 2
#       collision_mesh_filename: package://arp_reach/config/collision_mesh.ply
#       touch_links: []
#
# display:
#   name: ROSDisplay
#   collision_mesh_filename: package://arp_reach/config/collision_mesh.ply
#   kinematic_base_frame: base_link
#   marker_scale: 0.05
#
# target_pose_generator:
#   name: PointCloudTargetPoseGenerator
#   pcd_file: package://arp_reach/config/poses.pcd
#
# logger:
#   name: BoostProgressConsoleLogger
##


def write_yaml(out_file_name, pcd_filename):
    """
    This takes the information from poseArray and parses it into a yaml file that will be
    used as a parameter in the reach study!

    Parameters
    ----------
        out_file_name : str
            The file that will be written to!
        pcd_filename: str
            The file that needs to be included as the pcd file!
    """
    data = {
        'optimization':{
            'radius':0.2,
            'max_steps':10, 
            'step_improvement_threshold':0.01},
        'ik_solver':{
            'name':'MoveItIKSolver',
            'distance_threshold':0.0,
            'planning_group':'manipulator', 
            'touch_links': []},
        'evaluator':{
            'name':'MultiplicativeEvaluator', 
            'plugins': 
                [{'name':'ManipulabilityMoveIt',
                'planning_group':'manipulator'},
                {'name':'DistancePenaltyMoveIt',
                'planning_group':'manipulator',
                'distance_threshold':0.025,
                'exponent':2,
                'touch_links':[]},],
                },
        'display':{
            'name':'ROSDisplay',
            'kinematic_base_frame':'base_link',
            'marker_scale':0.05,
            'use_full_color_range':True,
        },
        'target_pose_generator':{
            'name':'PointCloudTargetPoseGenerator',
            'pcd_file':pcd_filename,
        },
        'logger':{
            'name':'BoostProgressConsoleLogger',
        },
    }

    try:
        file = open(out_file_name, "w")
    except (ValueError):
        print("File error- check path provided")
        return

    yaml.dump(data, file, sort_keys=False)
    file.close()

if __name__ == '__main__':
    write_yaml('test.yaml', 'testing pcd TEST')
